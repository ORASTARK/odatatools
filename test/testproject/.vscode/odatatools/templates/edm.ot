{{Header}}

declare namespace {{Namespace}} {
    {{#each EntityTypes}}
    export interface {{this.Name}} {
        {{#each this.Properties}}
        {{this.Name}}: {{this.Type}};
        {{/each}}
        {{#each this.NavigationProperties}}
        {{this.Name}}{{#if Nullable}}?{{/if}}: {{this.Type}};
        {{/each}}
        {{#if this.OpenType}}[x: string]: any;{{/if}}
    }
    {{/each}}
    {{#each ComplexTypes}}
    export interface {{this.Name}} {
        {{#each this.Properties}}
        {{this.Name}}: {{this.Type}};
        {{/each}}
        {{#if this.OpenType}}[x: string]: any;{{/if}}
    }
    {{/each}}
    {{#each EnumTypes}}
    export type {{this.Name}} = {{#each this.Members}}"{{this.Key}}"{{#unless @last}} | {{/unless}}{{/each}};
    {{/each}}
}

type JSDate = Date;

declare namespace Edm {
    export type Duration = string;
    export type Binary = string;
    export type Boolean = boolean;
    export type Byte = number;
    export type Date = JSDate;
    export type DateTimeOffset = JSDate;
    export type Decimal = number;
    export type Double = number;
    export type Guid = string;
    export type Int16 = number;
    export type Int32 = number;
    export type Int64 = number;
    export type SByte = number;
    export type Single = number;
    export type String = string;
    export type TimeOfDay = string;
    export type Stream = string;
    export type GeographyPoint = any;
}